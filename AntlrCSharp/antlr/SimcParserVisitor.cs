//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Data/Code/SimulationCraftParser/AntlrCSharp/SimcParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="SimcParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ISimcParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.profile"/>.
	/// </summary>
	/// <param name="ctx">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProfile([NotNull] SimcParser.ProfileContext ctx);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.commentLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommentLine([NotNull] SimcParser.CommentLineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.callAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallAction([NotNull] SimcParser.CallActionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.externAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternAction([NotNull] SimcParser.ExternActionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.useItemAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUseItemAction([NotNull] SimcParser.UseItemActionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.variableAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableAction([NotNull] SimcParser.VariableActionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.conditionalAction"/>.
	/// </summary>
	/// <param name="ctx">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalAction([NotNull] SimcParser.ConditionalActionContext ctx);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.actionpart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActionpart([NotNull] SimcParser.ActionpartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.target_cycle"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTarget_cycle([NotNull] SimcParser.Target_cycleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.target_if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTarget_if([NotNull] SimcParser.Target_ifContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.dotted_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotted_name([NotNull] SimcParser.Dotted_nameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.simpleAction"/>.
	/// </summary>
	/// <param name="ctx">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleAction([NotNull] SimcParser.SimpleActionContext ctx);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.eval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEval([NotNull] SimcParser.EvalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExp([NotNull] SimcParser.ExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.qualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifier([NotNull] SimcParser.QualifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.precombat_time"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrecombat_time([NotNull] SimcParser.Precombat_timeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.if_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_condition([NotNull] SimcParser.If_conditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimcParser.use_off_gcd_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUse_off_gcd_condition([NotNull] SimcParser.Use_off_gcd_conditionContext context);
}
